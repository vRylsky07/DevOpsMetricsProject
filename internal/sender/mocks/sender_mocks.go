// Code generated by MockGen. DO NOT EDIT.
// Source: sender.go

// Package mock_sender is a generated GoMock package.
package mock_sender

import (
	storage "DevOpsMetricsProject/internal/storage"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSenderInterface is a mock of SenderInterface interface.
type MockSenderInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSenderInterfaceMockRecorder
}

// MockSenderInterfaceMockRecorder is the mock recorder for MockSenderInterface.
type MockSenderInterfaceMockRecorder struct {
	mock *MockSenderInterface
}

// NewMockSenderInterface creates a new mock instance.
func NewMockSenderInterface(ctrl *gomock.Controller) *MockSenderInterface {
	mock := &MockSenderInterface{ctrl: ctrl}
	mock.recorder = &MockSenderInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSenderInterface) EXPECT() *MockSenderInterfaceMockRecorder {
	return m.recorder
}

// GetStorage mocks base method.
func (m *MockSenderInterface) GetStorage() storage.StorageInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStorage")
	ret0, _ := ret[0].(storage.StorageInterface)
	return ret0
}

// GetStorage indicates an expected call of GetStorage.
func (mr *MockSenderInterfaceMockRecorder) GetStorage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorage", reflect.TypeOf((*MockSenderInterface)(nil).GetStorage))
}

// SendMetricsHTTP mocks base method.
func (m *MockSenderInterface) SendMetricsHTTP(reportInterval int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendMetricsHTTP", reportInterval)
}

// SendMetricsHTTP indicates an expected call of SendMetricsHTTP.
func (mr *MockSenderInterfaceMockRecorder) SendMetricsHTTP(reportInterval interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMetricsHTTP", reflect.TypeOf((*MockSenderInterface)(nil).SendMetricsHTTP), reportInterval)
}
